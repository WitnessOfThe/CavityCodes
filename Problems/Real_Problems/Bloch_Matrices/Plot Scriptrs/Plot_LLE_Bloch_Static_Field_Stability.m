function [tt_1,tt_2,tt_3,tt_4,tt_5,tt_6,tt_7,tt_8,tt_9,tt_10,tt_12,tt_13,tt_14,tt_15] = Plot_LLE_Bloch_Static_Field_Stability(Stat,Flag)
    
    tt_1 = proPlot([],[],[]);
    tt_2 = proPlot([],[],[]);
    tt_3 = proPlot([],[],[]);
    
    tt_4 = proPlot([],[],[]);
    tt_5 = proPlot([],[],[]);
    tt_6 = proPlot([],[],[]);
    
    
    tt_7 = proPlot([],[],[]);
    tt_8 = proPlot([],[],[]);
    tt_9 = proPlot([],[],[]);
    
    tt_10 = proPlot([],[],[]);
    tt_11 = proPlot([],[],[]);
    tt_12 = proPlot([],[],[]);
    
    tt_13 = proPlot([],[],[]);
    tt_14 = proPlot([],[],[]);
    tt_15 = proPlot([],[],[]);
%%    
    lambda_nu_mu = zeros(size(Stat(1).Stab,2),Stat.Space.N*2);
    m_matrix     = zeros(size(Stat(1).Stab,2),Stat.Space.N*2);
    nu_matrix    = zeros(size(Stat(1).Stab,2),Stat.Space.N*2);
    
    for i = 1:size(Stat(1).Stab,2)
        
        lambda_nu_mu(i,:) = Stat(1).Stab(i).E_values/Stat(1).In.kappa;
        m_matrix(i,:)     = Stat(1).Stab(i).mum(1,:)/Stat.In.mu_bl;
        nu_matrix(i,:)    = Stat(1).Stab(i).In.n;
        
        [Max_y,ind_m]        = maxk(real(Stat(1).Stab(i).E_values)/Stat(1).In.kappa,2);
        Re_Max_nu_m(i,:)     = Max_y;
        ind_Re_max_nu_m(i,:) = ind_m;
        
        [Max_y,ind_m]        = maxk(imag(Stat(1).Stab(i).E_values)/Stat(1).In.kappa,2);
        Im_Max_nu_m(i,:)     = Max_y;
        ind_Im_max_nu_m(i,:) = ind_m;
        
    end
    
     [lambda,ind_un_lambda]       = unique(lambda_nu_mu);
     ind_un_lambda(isnan(lambda)) = [];
     lambda(isnan(lambda))        = [];
     nu_array                     = nu_matrix(ind_un_lambda);
     
    [Re_max,ind_max] = max((real(lambda)));
    Im_max           = abs(imag(lambda(ind_max)));
    if Re_max <= 1E-1
        Re_max = 3;
        Im_max = 5;
    end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
 %%   
     [max_re,ind_max] = maxk(real(lambda),4);

    for i = 1:size(Stat.Stab,2)
        
        tt_1 = tt_1.addData(real(lambda),...
            imag(lambda),'LineStyle','none',...
            'Marker','.','MarkerSize',15,'Color',[0,0,0]);
        if sum(real(lambda)>1E-1) > 0
            tt_1 = tt_1.addData(real(lambda(real(lambda)>0)),...
                imag(lambda(real(lambda)>0)),'LineStyle','none',...
                'Marker','.','MarkerSize',15,'Color',[1,0,0]);
            tt_1 = tt_1.addData(real(lambda(ind_max)),...
                imag(lambda(ind_max)),'LineStyle','none',...
                'Marker','.','MarkerSize',15,'Color',[0,1,0]);
        end
        
    end
    
%%
        tt_2 = tt_2.addData(nu_array,real(lambda),'Color',[0,0,0],'LineStyle','none','Marker','.','MarkerSize',15);
        
        tt_3 = tt_3.addData(nu_array,imag(lambda),'Color',[0,0,0],'LineStyle','none','Marker','.','MarkerSize',15);
        
        if sum(real(lambda)>1E-1) > 0

            tt_2 = tt_2.addData(nu_array(real(lambda)>0),real(lambda(real(lambda)>0)),'Color',[1,0,0],'LineStyle','none','Marker','.','MarkerSize',15);
            tt_2 = tt_2.addData(nu_array(ind_max),real(lambda(ind_max)),'Color',[0,1,0],'LineStyle','none','Marker','.','MarkerSize',15);
            tt_3 = tt_3.addData(nu_array(real(lambda)>0),imag(lambda(real(lambda)>0)),'Color',[1,0,0],'LineStyle','none','Marker','.','MarkerSize',15);
            tt_3 = tt_3.addData(nu_array(ind_max),imag(lambda(ind_max)),'Color',[0,1,0],'LineStyle','none','Marker','.','MarkerSize',15);
            
        end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%%
%     if Re_max > 0 
%         [~,ind_re_nu] = maxk(Re_Max_nu_m(:,1),2); 
%         
%         Eigen_Vector_1 = Stat.Stab( ind_re_nu(1) ).E_vectors(1:Stat.Space.N,ind_Re_max_nu_m(ind_re_nu(1),1));
%         Eigen_Vector_2 = Stat.Stab( ind_re_nu(1)).E_vectors(Stat.Space.N+1:Stat.Space.N*2,ind_Re_max_nu_m(ind_re_nu(1),1));
% 
%         tt_4 = tt_4.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_1).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_4 = tt_4.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_2).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_5 = tt_5.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_5 = tt_5.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_6 = tt_6.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_6 = tt_6.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
% 
%         Eigen_Vector_1 = Stat.Stab( ind_re_nu(2) ).E_vectors(1:Stat.Space.N,ind_Re_max_nu_m(ind_re_nu(2),1));
%         Eigen_Vector_2 = Stat.Stab( ind_re_nu(2)).E_vectors(Stat.Space.N+1:Stat.Space.N*2,ind_Re_max_nu_m(ind_re_nu(2),1));
% 
%         tt_7 = tt_7.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_1).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_7 = tt_7.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_2).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_8 = tt_8.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_8 = tt_8.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_9 = tt_9.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_9 = tt_9.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none'); 
%         
%         Eigen_Vector_1 = Stat.Stab( ind_re_nu(1) ).E_vectors(1:Stat.Space.N,ind_Re_max_nu_m(ind_re_nu(1),2));
%         Eigen_Vector_2 = Stat.Stab( ind_re_nu(1)).E_vectors(Stat.Space.N+1:Stat.Space.N*2,ind_Re_max_nu_m(ind_re_nu(1),2));
% 
%         tt_10 = tt_10.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_1).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_10 = tt_10.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_2).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_11 = tt_11.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_11 = tt_11.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_12 = tt_12.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_12 = tt_12.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
% 
%         Eigen_Vector_1 = Stat.Stab( ind_re_nu(2) ).E_vectors(1:Stat.Space.N,ind_Re_max_nu_m(ind_re_nu(2),2));
%         Eigen_Vector_2 = Stat.Stab( ind_re_nu(2)).E_vectors(Stat.Space.N+1:Stat.Space.N*2,ind_Re_max_nu_m(ind_re_nu(2),2));
% 
%         tt_13 = tt_13.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_1).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_13 = tt_13.addData(fftshift(Stat.Space.k),...
%             10*log10(fftshift(abs(Eigen_Vector_2).^2)),'PlotType','stem','BaseValue',-200,'Marker','none');
%         tt_14 = tt_14.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_14 = tt_14.addData(fftshift(Stat.Space.k),...
%             (fftshift(real(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_15 = tt_15.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_1))),'PlotType','stem','BaseValue',0,'Marker','none');
%         tt_15 = tt_15.addData(fftshift(Stat.Space.k),...
%             (fftshift(imag(Eigen_Vector_2))),'PlotType','stem','BaseValue',0,'Marker','none');   
%         
%     end
    
%%
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%%
    tt_1         = tt_1.changeAxisOptions('XLabelText','$Re[\lambda_{m\mu}^{(k)}]/\kappa$',...
                        'YLabelText','$Im[\lambda_{m\mu}^{(k)}]/\kappa$',...  
                        'FontSize',13,'YLim',[-Im_max,Im_max]*1.1,...
                        'XLim',[-Re_max,Re_max]*1.1);
    tt_2         = tt_2.changeAxisOptions('XLabelText','k','YLabelText','$Re[\lambda_{m\mu}^{(k)}]/\kappa$',...  
                        'FontSize',13,'XLim',[min(nu_matrix(:,1)),max(nu_matrix(:,1))],'YLim',[-Re_max,Re_max ]*1.5);
    tt_3         = tt_3.changeAxisOptions('XLabelText','k','YLabelText','$Im[\lambda_{m\mu}^{(k)}]/\kappa$',...  
                        'FontSize',13,'XLim',[min(nu_matrix(:,1)),max(nu_matrix(:,1))],'YLim',[-Im_max,Im_max]*1.5);


%     tt_4         = tt_4.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$10*log10(abs(x^{(k+)}_{\mu_1 m})$',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_5         = tt_5.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Re(x^{(k+)}_{\mu_1 m})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_6         = tt_6.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Im(x^{(k+)}_{\mu_1 m})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%                     
%     tt_7         = tt_7.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$10*log10(abs(x^{(k-)}_{\mu m_2})$',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_8         = tt_8.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Re(x^{(k-)}_{\mu m_2})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_9         = tt_9.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Im(x^{(k-)}_{\mu m_2})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
% 
%                     
%     tt_10         = tt_10.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$10*log10(abs(x^{(k+)}_{\mu m_1})$',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_11         = tt_11.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Re(x^{(k+)}_{\mu m_1})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_12         = tt_12.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Im(x^{(k+)}_{\mu m_1})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
% 
%                     
%     tt_13         = tt_13.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$10*log10(abs(x^{(k-)}_{\mu m_2})$',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_14         = tt_14.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Re(x^{(k-)}_{\mu m_2})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%     tt_15         = tt_15.changeAxisOptions('XLabelText','$m\mu+n$',...
%                         'YLabelText','$Im(x^{(k-)}_{\mu m_2})$)',...  
%                         'FontSize',13,...
%                         'XLim',[-4*Stat.In.mu_bl,4*Stat.In.mu_bl]*1.1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
    if Flag
        figure;
        CF = conFigure([tt_1,tt_2,tt_3],1,3, 'UniformPlots', true,...
                                'Height', 10, 'Width', 30,'Labels',false);
       %,tt_4,tt_5,tt_6,tt_7,tt_8,tt_9,tt_10,tt_11,tt_12,tt_13,tt_14,tt_15         
    end
    
end